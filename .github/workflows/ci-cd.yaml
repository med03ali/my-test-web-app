name: CI pipeline

on:
  push:
    branches:
      - main # Triggers the workflow on pushes to the 'main' branch

env:
  AWS_REGION: us-east-1 # Replace with your actual AWS region (e.g., eu-west-1)
  ECR_REPOSITORY: devops-test-app # The name of your ECR repository

jobs:
  build-and-push:
    runs-on: ubuntu-latest # Uses an Ubuntu virtual machine to run the job
    outputs:
      image_tag: ${{ steps.build-push.outputs.image_tag }} # Make the image_tag available to other jobs

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Retrieves your code from GitHub repository

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # Configures AWS credentials
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Uses GitHub secret
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Uses GitHub secret
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2 # Logs into ECR

    - name: Build, tag, and push image to Amazon ECR
      id: build-push # Added an ID to this step to capture its output
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} # Retrieves ECR registry URI
        IMAGE_SHA_TAG: latest # Use the commit SHA as the image tag
      run: |
        echo "Building and pushing image with tag: $IMAGE_SHA_TAG"
        # Builds the Docker image with the full tag (ECR URI + repo name + SHA tag)
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA_TAG .
        # Pushes the image to ECR
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA_TAG
        echo "image_tag=$IMAGE_SHA_TAG" >> "$GITHUB_OUTPUT" # Output the tag for other jobs



